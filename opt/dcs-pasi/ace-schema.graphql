schema @site(type: "pasi:ace/pred/type") {
  query: Query
  mutation: Mutation
}

# java.time.LocalDate ?
scalar Date

type Mutation {
  upsertFurnitureDescription(
    # I'm likely to replace this composite key approach to enforcing a uniqueness contraint,
    # by a test-and-set function that can check any constraints while transacting.
    # (Alex suggests implementing that by using juxt-site's put-code stuff or his WIP lambda stuff.)
    id: ID
      @site(
        a: "xt/id"
        gen: {
          type: TEMPLATE 
          template: "pasi:ace/ent/FurnitureDescription/{{category}}/{{subcategory}}"
        }
      )
    category: String! @site(a: "pasi:ace/pred/category")
    subcategory: String! @site(a: "pasi:ace/pred/subcategory")
    itemKg: Float! @site(a: "pasi:ace/pred/itemKg")
  ): FurnitureDescription @site(mutation: "update")

  upsertReusedFurniture(
    id: ID
      @site(
        a: "xt/id"
        gen: {
          type: TEMPLATE 
          template: "pasi:ace/ent/ReusedFurniture/{{from}}/{{to}}/{{category}}/{{subcategory}}"
        }
      )
      from: Date! @site(a: "pasi:ace/pred/from")
      to: Date! @site(a: "pasi:ace/pred/to")
      category: String! @site(a: "pasi:ace/pred/category")
      subcategory: String! @site(a: "pasi:ace/pred/subcategory")
      description: ID 
        @site(
          a: "pasi:ace/pred/description"
          gen: {
            type: TEMPLATE 
            template: "pasi:ace/ent/FurnitureDescription/{{category}}/{{subcategory}}"
          }
        )
      itemCount: Int! @site(a: "pasi:ace/pred/itemCount")
  ): ReusedFurniture @site(mutation: "update")
}



type Query {
  furnitureDescriptions: [FurnitureDescription]!
  furnitureDescription(id: ID!): FurnitureDescription @site(e: "id")
  reusedFurnitures: [ReusedFurniture]!
  reusedFurniture(id: ID!): ReusedFurniture @site(e: "id")
}

"""
ACE description of furniture
"""
type FurnitureDescription {
  id: ID!
  category: String! @site(a: "pasi:ace/pred/category")
  subcategory: String! @site(a: "pasi:ace/pred/subcategory")
  itemKg: Float! @site(a: "pasi:ace/pred/itemKg")
}


type ReusedFurniture {
  id: ID!
  from: Date! @site(a: "pasi:ace/pred/from")
  to: Date! @site(a: "pasi:ace/pred/to")
  """
  category: String! @site(a: "pasi:ace/pred/category")
  subcategory: String! @site(a: "pasi:ace/pred/subcategory")
  """
  description: ID! @site(a: "pasi:ace/pred/description")
  descriptionEntity: FurnitureDescription 
    @site(
      q: { find: [d]
           where: [[d {keyword: "pasi:ace/pred/type"} "FurnitureDescription"]
                   [object {keyword: "pasi:ace/pred/description"} d]]
         }
    )
  itemCount: Int! @site(a: "pasi:ace/pred/itemCount")
}
