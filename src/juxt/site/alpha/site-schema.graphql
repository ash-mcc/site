schema {
  query: Query
}

"""
Root query object
"""
type Query {
  """
  Access user details for all users in the system
  """
  allUsers: [SiteUser]
  @site(q: { find: [e] where: [[e {keyword: "juxt.site.alpha/type"} "User"]]})

  """
  Access a single user's details
  """
  user(username: String!): [SiteUser]
  @site(q:
    { find: [e]
      where: [[e {keyword: "juxt.site.alpha/type"} "User"]
              [e {keyword: "juxt.pass.alpha/username"} username]]})

  """
  Access Site's system
  """
  system: SiteSystem @site(resolver: "juxt.site.alpha.graphql-resolver/system")

  """
  Access a request
  """
  request(id: ID): SiteRequest @site(resolver: "juxt.site.alpha.graphql-resolver/request")

  requests: SiteRequests @site(resolver: "juxt.site.alpha.graphql-resolver/requests")

  """
  Access the currently logged in user
  """
  subject: SiteSubject @site(resolver: "juxt.site.alpha.graphql-resolver/subject")
}

type SiteSubject {
  user: SiteUser
  authScheme: String
}

"""
An object representing a Site user. Anyone who needs to log in to the system must have a user record.
"""
type SiteUser {
  id: ID @site(a: "xt/id") # should definitely default this for ID scalars...
  username: String @site(a: "juxt.pass.alpha/username")
  name: String
  email: String
  roles: [SiteRole]
    @site(q: { find: [role]
               where: [[role {keyword: "juxt.site.alpha/type"} "Role"]
                       [mapping {keyword: "juxt.site.alpha/type"} "UserRoleMapping"]
                       [mapping {keyword: "juxt.pass.alpha/assignee"} object]
                       [mapping {keyword: "juxt.pass.alpha/role"} role]]})}


"""
A Site role, for using in policies to grant authorization to access certain resources.
"""
type SiteRole {
  id: ID @site(a: "xt/id")
  name: String @site(a: "name")
  description: String @site(a: "description")
}

type SiteConfiguration {
  baseUri: String
  unixPassPasswordPrefix: String
  serverPortNumber: Int
}

type SiteSystem {
  database: SiteDatabaseStatus
  """
  Access Site's configuration
  """
  # Adding a NON_NULL wrapper (Configuration!) seems to break introspection on
  # GraphiQL, this might not have been completely implemented yet. For now,
  # don't use NON_NULL.
  configuration: SiteConfiguration

  version: SiteVersionDetails
  status: SiteStatusDetails
}

type SiteVersionDetails {
  gitSha: String
}

type SiteStatusDetails {
  txLogAvail: Int
  docStoreAvail: Int
  indexStoreAvail: Int
}

type SiteDatabaseStatus {
  version: String
  revision: String
  indexVersion: Int
  kvStore: String
  estimateNumKeys: Int
  kvSize: Int
  attributeStats: [SiteAttributeStat]
}

type SiteAttributeStat {
  attribute: String
  frequency: Int
}

type SiteRequests {
  count: Int
  summaries: [SiteRequestSummary]
}

type SiteRequestSummary {
  id: ID
  status: Int
  date: String
}

scalar JSON

type SiteRequest {
  id: ID
  status: Int
  date: String
  requestUri: ID
  method: String

  "The GraphQL operation name called by the request"
  operationName: String

  detail: JSON
}
