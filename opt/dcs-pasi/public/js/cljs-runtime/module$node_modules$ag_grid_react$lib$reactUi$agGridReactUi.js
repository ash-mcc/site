shadow$provide.module$node_modules$ag_grid_react$lib$reactUi$agGridReactUi=function(global,require,module,exports){var __extends=this&&this.__extends||function(){var extendStatics=function(d$jscomp$0,b$jscomp$0){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return extendStatics(d$jscomp$0,b$jscomp$0)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b);d.prototype=
null===b?Object.create(b):(__.prototype=b.prototype,new __)}}(),__assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};return __assign.apply(this,arguments)};global=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);result["default"]=
mod;return result};module=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{"default":mod}};Object.defineProperty(exports,"__esModule",{value:!0});var ag_grid_community_1=require("module$node_modules$ag_grid_community$dist$ag_grid_community_cjs"),react_1=global(require("module$node_modules$react$index")),agGridColumn_1=require("module$node_modules$ag_grid_react$lib$shared$agGridColumn"),changeDetectionService_1=require("module$node_modules$ag_grid_react$lib$shared$changeDetectionService"),
newReactComponent_1=require("module$node_modules$ag_grid_react$lib$shared$newReactComponent"),portalManager_1=require("module$node_modules$ag_grid_react$lib$shared$portalManager"),gridComp_1=module(require("module$node_modules$ag_grid_react$lib$reactUi$gridComp")),reactFrameworkOverrides_1=require("module$node_modules$ag_grid_react$lib$reactUi$reactFrameworkOverrides");require=function(_super){function AgGridReactUi(props){var _this=_super.call(this,props)||this;_this.props=props;_this.destroyFuncs=
[];_this.changeDetectionService=new changeDetectionService_1.ChangeDetectionService;_this.eGui=react_1.default.createRef();_this.state={context:void 0};_this.portalManager=new portalManager_1.PortalManager(_this,props.componentWrappingElement,props.maxComponentCreationTimeMs);return _this}__extends(AgGridReactUi,_super);AgGridReactUi.prototype.render=function(){return react_1.default.createElement("div",{style:this.createStyleForDiv(),className:this.props.className,ref:this.eGui},this.state.context&&
react_1.default.createElement(gridComp_1.default,{context:this.state.context}),this.portalManager.getPortals())};AgGridReactUi.prototype.createStyleForDiv=function(){return __assign({height:"100%"},this.props.containerStyle||{})};AgGridReactUi.prototype.componentDidMount=function(){var _this=this,modules=this.props.modules||[];modules={providedBeanInstances:{frameworkComponentWrapper:new ReactFrameworkComponentWrapper$jscomp$0(this.portalManager)},modules,frameworkOverrides:new reactFrameworkOverrides_1.ReactFrameworkOverrides};
this.gridOptions=__assign({},this.props.gridOptions);var children=this.props.children;agGridColumn_1.AgGridColumn.hasChildColumns(children)&&(this.gridOptions.columnDefs=agGridColumn_1.AgGridColumn.mapChildColumnDefs(children));this.gridOptions=ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(this.gridOptions,this.props);(new ag_grid_community_1.GridCoreCreator).create(this.eGui.current,this.gridOptions,function(context){_this.setState({context})},modules);this.destroyFuncs.push(function(){return _this.gridOptions.api.destroy()});
this.api=this.gridOptions.api;this.columnApi=this.gridOptions.columnApi;this.props.setGridApi(this.api,this.columnApi)};AgGridReactUi.prototype.componentWillUnmount=function(){this.destroyFuncs.forEach(function(f){return f()})};AgGridReactUi.prototype.componentDidUpdate=function(prevProps){this.processPropsChanges(prevProps,this.props)};AgGridReactUi.prototype.processPropsChanges=function(prevProps,nextProps){var changes={};this.extractGridPropertyChanges(prevProps,nextProps,changes);this.extractDeclarativeColDefChanges(nextProps,
changes);this.processChanges(changes)};AgGridReactUi.prototype.extractDeclarativeColDefChanges=function(nextProps,changes){if(!(this.props.gridOptions&&this.props.gridOptions.columnDefs||this.props.columnDefs)){var debugLogging=!!nextProps.debug,currentColDefs=this.gridOptions.columnDefs;if(agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)){var detectionStrategy=this.changeDetectionService.getStrategy(this.getStrategyTypeForProp("columnDefs"));nextProps=agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);
detectionStrategy.areEqual(currentColDefs,nextProps)||(debugLogging&&console.log("agGridReact: colDefs definitions changed"),changes.columnDefs={previousValue:currentColDefs,currentValue:nextProps})}else currentColDefs&&0<currentColDefs.length&&(changes.columnDefs={previousValue:currentColDefs,currentValue:[]})}};AgGridReactUi.prototype.extractGridPropertyChanges=function(prevProps,nextProps,changes){var _this=this,debugLogging=!!nextProps.debug;Object.keys(nextProps).forEach(function(propKey){ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES,
propKey)&&!_this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey)).areEqual(prevProps[propKey],nextProps[propKey])&&(debugLogging&&console.log("agGridReact: ["+propKey+"] property changed"),changes[propKey]={previousValue:prevProps[propKey],currentValue:nextProps[propKey]})});ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function(funcName){prevProps[funcName]!==nextProps[funcName]&&(debugLogging&&console.log("agGridReact: ["+funcName+"] event callback changed"),
changes[funcName]={previousValue:prevProps[funcName],currentValue:nextProps[funcName]})})};AgGridReactUi.prototype.processChanges=function(changes){this.api&&ag_grid_community_1.ComponentUtil.processOnChange(changes,this.gridOptions,this.api,this.columnApi)};AgGridReactUi.prototype.getStrategyTypeForProp=function(propKey){if("rowData"===propKey){if(this.props.rowDataChangeDetectionStrategy)return this.props.rowDataChangeDetectionStrategy;if(this.isImmutableDataActive())return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck}return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck};
AgGridReactUi.prototype.isImmutableDataActive=function(){return this.props.deltaRowDataMode||this.props.immutableData||this.props.gridOptions&&(this.props.gridOptions.deltaRowDataMode||this.props.gridOptions.immutableData)};return AgGridReactUi}(react_1.Component);exports.AgGridReactUi=require;var ReactFrameworkComponentWrapper$jscomp$0=function(_super){function ReactFrameworkComponentWrapper(parent){var _this=_super.call(this)||this;_this.parent=parent;return _this}__extends(ReactFrameworkComponentWrapper,
_super);ReactFrameworkComponentWrapper.prototype.createWrapper=function(UserReactComponent,componentType){return new newReactComponent_1.NewReactComponent(UserReactComponent,this.parent,componentType)};ReactFrameworkComponentWrapper.prototype.unwrap=function(comp){return comp&&comp.getFrameworkComponentInstance?comp.getFrameworkComponentInstance():comp};return ReactFrameworkComponentWrapper}(ag_grid_community_1.BaseComponentWrapper)}
//# sourceMappingURL=module$node_modules$ag_grid_react$lib$reactUi$agGridReactUi.js.map
