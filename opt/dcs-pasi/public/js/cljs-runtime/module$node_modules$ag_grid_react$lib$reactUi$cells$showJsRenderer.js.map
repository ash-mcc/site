{
"version":3,
"file":"module$node_modules$ag_grid_react$lib$reactUi$cells$showJsRenderer.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,iCAAR,CAAd,CACIO,eAAiBP,OAAA,CAAQ,4DAAR,CA6DrBE,QAAQM,CAAAA,OAAR,CA5DwBC,QAAS,CAACC,WAAD,CAAcC,SAAd,CAAyBC,cAAzB,CAAyCC,iBAAzC,CAA4DC,IAA5D,CAAkE,CAAA,IACrCC,QAAjDT,OAAQU,CAAAA,UAARC,CAAmBV,cAAeW,CAAAA,YAAlCD,CAA8DF,CAAAA,OADwB,CAE3FI,oBAAsBb,OAAQc,CAAAA,WAAR,CAAoB,QAAS,EAAG,CACtD,IAAIC;AAAOR,iBAAkBS,CAAAA,OAC7B,IAAKD,IAAL,CAAA,CAGA,IAAIE,QAAUF,IAAKG,CAAAA,MAAL,EACVD,QAAJ,EAAeA,OAAQE,CAAAA,aAAvB,EACIF,OAAQE,CAAAA,aAAcC,CAAAA,WAAtB,CAAkCH,OAAlC,CAEJR,QAAQY,CAAAA,WAAR,CAAoBN,IAApB,CACAR,kBAAkBS,CAAAA,OAAlB,CAA4BM,IAAAA,EAR5B,CAFsD,CAAhC,CAWvB,EAXuB,CAa1BtB,QAAQuB,CAAAA,SAAR,CAAkB,QAAS,EAAG,CAE1B,IAAIC,cAAgBpB,WAAhBoB,EAA+BpB,WAAYqB,CAAAA,WAA3CD,EAA0D,CAACpB,WAAYqB,CAAAA,WAAYC,CAAAA,sBAAvF,CACIC,qBAAuBtB,SAAvBsB,EAAsD,IAAtDA,EAAoCrB,cAGxC,IAL+B,IAK/B,EALgBF,WAKhB,EAF4BoB,CAAAA,aAE5B,EAF8CG,oBAE9C,CACId,mBAAA,EADJ,KAAA,CAIIY,aAAAA,CAAcrB,WAAYqB,CAAAA,WAC9B;GAAIlB,iBAAkBS,CAAAA,OAAtB,CAA+B,CAEvBY,oBAAAA,CAASrB,iBAAkBS,CAAAA,OAE3Ba,qBAAAA,CADmC,IACnB,EADCD,oBAAOE,CAAAA,OACR,EADgD,CAChD,EAD2B1B,WAAY2B,CAAAA,KACvC,CAAiBH,oBAAOE,CAAAA,OAAP,CAAeL,aAAYO,CAAAA,MAA3B,CAAjB,CAAsD,CAAA,CAG1E,IAFsC,CAAA,CAEtC,GAFoBH,oBAEpB,EAFgEP,IAAAA,EAEhE,GAF8CO,oBAE9C,CACI,MAGJhB,oBAAA,EAX2B,CAe/B,GAFIoB,aAEJ,CAFcR,aAAYS,CAAAA,kBAAZ,EAEd,CAIA,GADInB,aACJ,CADWkB,aAAQE,CAAAA,UAAR,CAAmB,IAAnB,CAAyB,QAAS,CAACC,CAAD,CAAI,CAAE,MAAOA,EAAT,CAAtC,CACX,CAGInB,oBAGJ,CAHcF,aAAKG,CAAAA,MAAL,EAGd,CADOmB,CADMhC,SAAAiC,CAAYhC,cAAZgC,CAA6B9B,IAAKQ,CAAAA,OACxCqB,EAAAA,WAAP,CAAmBpB,oBAAnB,CACA;AAAAV,iBAAkBS,CAAAA,OAAlB,CAA4BD,aA9B5B,CAN0B,CAA9B,CAqCG,CAACX,WAAD,CAAcC,SAAd,CAAyBC,cAAzB,CArCH,CAyCAN,QAAQuB,CAAAA,SAAR,CAAkB,QAAS,EAAG,CAC1B,MAAOV,oBADmB,CAA9B,CAEG,EAFH,CAxD+F,CAN4B;",
"sources":["node_modules/ag-grid-react/lib/reactUi/cells/showJsRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ag_grid_react$lib$reactUi$cells$showJsRenderer\"] = function(global,require,module,exports) {\n// ag-grid-react v26.2.0\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar beansContext_1 = require(\"../beansContext\");\nvar useJsCellRenderer = function (showDetails, showTools, toolsValueSpan, jsCellRendererRef, eGui) {\n    var _a = react_1.useContext(beansContext_1.BeansContext), context = _a.context, userComponentFactory = _a.userComponentFactory;\n    var destroyCellRenderer = react_1.useCallback(function () {\n        var comp = jsCellRendererRef.current;\n        if (!comp) {\n            return;\n        }\n        var compGui = comp.getGui();\n        if (compGui && compGui.parentElement) {\n            compGui.parentElement.removeChild(compGui);\n        }\n        context.destroyBean(comp);\n        jsCellRendererRef.current = undefined;\n    }, []);\n    // create or refresh JS cell renderer\n    react_1.useEffect(function () {\n        var showValue = showDetails != null;\n        var jsCompDetails = showDetails && showDetails.compDetails && !showDetails.compDetails.componentFromFramework;\n        var waitingForToolsSetup = showTools && toolsValueSpan == null;\n        var showComp = showValue && jsCompDetails && !waitingForToolsSetup;\n        // if not showing comp, destroy any existing one and return\n        if (!showComp) {\n            destroyCellRenderer();\n            return;\n        }\n        var compDetails = showDetails.compDetails;\n        if (jsCellRendererRef.current) {\n            // attempt refresh if refresh method exists\n            var comp_1 = jsCellRendererRef.current;\n            var attemptRefresh = comp_1.refresh != null && showDetails.force == false;\n            var refreshResult = attemptRefresh ? comp_1.refresh(compDetails.params) : false;\n            var refreshWorked = refreshResult === true || refreshResult === undefined;\n            // if refresh worked, nothing else to do\n            if (refreshWorked) {\n                return;\n            }\n            // if refresh didn't work, we destroy it and continue, so new cell renderer created below\n            destroyCellRenderer();\n        }\n        var promise = compDetails.newAgStackInstance();\n        ;\n        if (!promise) {\n            return;\n        }\n        var comp = promise.resolveNow(null, function (x) { return x; }); // js comps are never async\n        if (!comp) {\n            return;\n        }\n        var compGui = comp.getGui();\n        var parent = showTools ? toolsValueSpan : eGui.current;\n        parent.appendChild(compGui);\n        jsCellRendererRef.current = comp;\n    }, [showDetails, showTools, toolsValueSpan]);\n    // this effect makes sure destroyCellRenderer gets called when the\n    // component is destroyed. as the other effect only updates when there\n    // is a change in state\n    react_1.useEffect(function () {\n        return destroyCellRenderer;\n    }, []);\n};\nexports.default = useJsCellRenderer;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","react_1","beansContext_1","default","useJsCellRenderer","showDetails","showTools","toolsValueSpan","jsCellRendererRef","eGui","context","useContext","_a","BeansContext","destroyCellRenderer","useCallback","comp","current","compGui","getGui","parentElement","removeChild","destroyBean","undefined","useEffect","jsCompDetails","compDetails","componentFromFramework","waitingForToolsSetup","comp_1","refreshResult","refresh","force","params","promise","newAgStackInstance","resolveNow","x","appendChild","parent"]
}
