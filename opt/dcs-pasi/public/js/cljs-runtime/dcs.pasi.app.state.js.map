{"version":3,"sources":["dcs/pasi/app/state.cljs"],"mappings":";AAIA,GAAA,QAAAA,gCAAAC,qCAAAC,yCAAAC,+CAAAC;AAAA;AAAA,AAAA,AAASC,0BAAK,gDAAA,2CAAA,oEAAA,KAAA,mEAAA,KAAA,gFAAA,2CAAA,mDAAA,KAAA,qDAAA,KAAA,mDAAA,KAAA,wDAAA,KAAA,uDAAA,KAAA,mDAAA,KAAA,+CAAA,aAAA,0DAAA,2CAAA,mDAAA,iFAAA,qDAAA,+EAAA,mDAAA,+EAAA,wDAAA,kFAAA,uDAAA,yFAAA,mDAAA,mFAAA,sDAAA,KAAA,2DAAA,2CAAA,uDAAA,KAAA,4DAAA,2CAAA,wDAAA,kCAAA,oDAAA,kCAAA,2DAAA,kCAAA,2DAAA,eAAA,gEAAA,oBAAA,6DAAA,KAAA,2DAAA,z/EAACC;;AA0Bf,GAAA,QAAAN,gCAAAC,qCAAAC,yCAAAC,+CAAAI;AAAA;AAAA,AAAA,AAASC,wCAAmB,4CAAA,mFAAA,/HAACC,oBAASJ;;AACtC,GAAA,QAAAL,gCAAAC,qCAAAC,yCAAAC,+CAAAO;AAAA;AAAA,AAAA,AAASC,wCAAmB,4CAAA,mFAAA,/HAACF,oBAASJ;;AAEtC,AAAKO,mDAA8B,4CAAA,mFAAA,gFAAA,/MAACH,oBAASJ;AAC7C,AAAKQ,oDAA+B,4CAAA,mFAAA,gFAAA,/MAACJ,oBAASJ;AAC9C,AAAKS,mDAA8B,4CAAA,mFAAA,gFAAA,/MAACL,oBAASJ;AAC7C,AAAKU,qDAAgC,4CAAA,mFAAA,gFAAA,/MAACN,oBAASJ;AAC/C,AAAKW,qDAAgC,4CAAA,mFAAA,gFAAA,/MAACP,oBAASJ;AAC/C,AAAKY,mDAA8B,4CAAA,mFAAA,gFAAA,/MAACR,oBAASJ;AAC7C,AAAKa,iDAA4B,4CAAA,mFAAA,gFAAA,/MAACT,oBAASJ;AAE3C,AAAKc,wCAAmB,4CAAA,mFAAA,0DAAA,zLAACV,oBAASJ;AAClC,AAAKe,yCAAoB,4CAAA,mFAAA,0DAAA,zLAACX,oBAASJ;AACnC,AAAKgB,wCAAmB,4CAAA,mFAAA,0DAAA,zLAACZ,oBAASJ;AAClC,AAAKiB,0CAAqB,4CAAA,mFAAA,0DAAA,zLAACb,oBAASJ;AACpC,AAAKkB,0CAAqB,4CAAA,mFAAA,0DAAA,zLAACd,oBAASJ;AACpC,AAAKmB,wCAAmB,4CAAA,mFAAA,0DAAA,zLAACf,oBAASJ;AAElC,AAAKoB,iCAAY,4CAAA,mFAAA,/HAAChB,oBAASJ;AAE3B,AAAKqB,0CAAqB,4CAAA,mFAAA,2DAAA,1LAACjB,oBAASJ;AACpC,AAAKsB,mDAA8B,4CAAA,mFAAA,2DAAA,4DAAA,tPAAClB,oBAASJ;AAC7C,AAAKuB,kDAA6B,4CAAA,mFAAA,2DAAA,4DAAA,tPAACnB,oBAASJ;AAC5C,AAAKwB,qDAAgC,4CAAA,mFAAA,2DAAA,4DAAA,tPAACpB,oBAASJ;AAC/C,AAAKyB,qDAAgC,4CAAA,mFAAA,2DAAA,4DAAA,tPAACrB,oBAASJ;AAC/C,AAAK0B,uDAAkC,4CAAA,mFAAA,2DAAA,4DAAA,tPAACtB,oBAASJ;AACjD,AAAK2B,6CAAwB,4CAAA,mFAAA,2DAAA,1LAACvB,oBAASJ;AACvC,AAAK4B,oCAAe,4CAAA,mFAAA,2DAAA,1LAACxB,oBAASJ","names":["js/dcs","js/dcs.pasi","js/dcs.pasi.app","js/dcs.pasi.app.state","js/dcs.pasi.app.state.root","dcs.pasi.app.state/root","reagent.core.atom","js/dcs.pasi.app.state.route-match-cursor","dcs.pasi.app.state/route-match-cursor","reagent.core/cursor","js/dcs.pasi.app.state.participant-cursor","dcs.pasi.app.state/participant-cursor","dcs.pasi.app.state/ace-grid-api-component-cursor","dcs.pasi.app.state/anon-grid-api-component-cursor","dcs.pasi.app.state/dcs-grid-api-component-cursor","dcs.pasi.app.state/frshr-grid-api-component-cursor","dcs.pasi.app.state/stcmf-grid-api-component-cursor","dcs.pasi.app.state/zws-grid-api-component-cursor","dcs.pasi.app.state/x-grid-api-component-cursor","dcs.pasi.app.state/ace-type-kw-cursor","dcs.pasi.app.state/anon-type-kw-cursor","dcs.pasi.app.state/dcs-type-kw-cursor","dcs.pasi.app.state/frshr-type-kw-cursor","dcs.pasi.app.state/stcmf-type-kw-cursor","dcs.pasi.app.state/zws-type-kw-cursor","dcs.pasi.app.state/x-ds-cursor","dcs.pasi.app.state/unauthn-wr-ds-cursor","dcs.pasi.app.state/unauthn-selected-years-cursor","dcs.pasi.app.state/unauthn-selected-orgs-cursor","dcs.pasi.app.state/unauthn-selected-streams-cursor","dcs.pasi.app.state/unauthn-selected-groupby-cursor","dcs.pasi.app.state/unauthn-selected-charttype-cursor","dcs.pasi.app.state/unauthn-grid-api-cursor","dcs.pasi.app.state/geojson-cursor"],"sourcesContent":["(ns dcs.pasi.app.state\n  (:require [reagent.core :as r]))\n\n\n(defonce root (r/atom {:route-match        nil\n                       :participant        nil\n                       :grid-api-component {:ace   nil\n                                            :anon  nil\n                                            :dcs   nil\n                                            :frshr nil\n                                            :stcmf nil\n                                            :zws   nil\n                                            :x     nil}\n                       :type-kw            {:ace   :aceReusedFurniture\n                                            :anon  :dcsWasteReduction\n                                            :dcs   :dcsWasteReduction\n                                            :frshr :frshrReusedMaterial\n                                            :stcmf :stcmfRedistributedFood\n                                            :zws   :zwsCarbonMetric}\n                       \n                       :x-ds               nil\n                       :unauthn            {:wr-ds    nil\n                                            :selected {:years     #{}\n                                                       :orgs      #{}\n                                                       :streams   #{}\n                                                       :groupby   \"Waste stream\"\n                                                       :charttype \"Bar chart\"}\n                                            :grid-api nil\n                                            :geojson  nil}}))\n\n(defonce route-match-cursor (r/cursor root [:route-match]))\n(defonce participant-cursor (r/cursor root [:participant]))\n\n(def ace-grid-api-component-cursor (r/cursor root [:grid-api-component :ace]))\n(def anon-grid-api-component-cursor (r/cursor root [:grid-api-component :anon]))\n(def dcs-grid-api-component-cursor (r/cursor root [:grid-api-component :dcs]))\n(def frshr-grid-api-component-cursor (r/cursor root [:grid-api-component :frshr]))\n(def stcmf-grid-api-component-cursor (r/cursor root [:grid-api-component :stcmf]))\n(def zws-grid-api-component-cursor (r/cursor root [:grid-api-component :zws]))\n(def x-grid-api-component-cursor (r/cursor root [:grid-api-component :x]))\n\n(def ace-type-kw-cursor (r/cursor root [:type-kw :ace]))\n(def anon-type-kw-cursor (r/cursor root [:type-kw :anon]))\n(def dcs-type-kw-cursor (r/cursor root [:type-kw :dcs]))\n(def frshr-type-kw-cursor (r/cursor root [:type-kw :frshr]))\n(def stcmf-type-kw-cursor (r/cursor root [:type-kw :stcmf]))\n(def zws-type-kw-cursor (r/cursor root [:type-kw :zws]))\n\n(def x-ds-cursor (r/cursor root [:x-ds]))\n\n(def unauthn-wr-ds-cursor (r/cursor root [:unauthn :wr-ds]))\n(def unauthn-selected-years-cursor (r/cursor root [:unauthn :selected :years]))\n(def unauthn-selected-orgs-cursor (r/cursor root [:unauthn :selected :orgs]))\n(def unauthn-selected-streams-cursor (r/cursor root [:unauthn :selected :streams]))\n(def unauthn-selected-groupby-cursor (r/cursor root [:unauthn :selected :groupby]))\n(def unauthn-selected-charttype-cursor (r/cursor root [:unauthn :selected :charttype]))\n(def unauthn-grid-api-cursor (r/cursor root [:unauthn :grid-api]))\n(def geojson-cursor (r/cursor root [:unauthn :geojson]))\n\n\n;; -----------------\n\n\n\n"]}