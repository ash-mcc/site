{"version":3,"sources":["dcs/pasi/app/loader.cljs"],"mappings":"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","names":["dcs.pasi.app.loader/fetch","url","body-handler","js/console.log","c__41462__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__41463__auto__","switch__41377__auto__","state_48296","state_val_48297","statearr-48298","inst_48266","inst_48267","inst_48268","cljs.core/PersistentHashMap","inst_48269","cljs.core.async.impl.ioc-helpers/take!","inst_48276","inst_48282","statearr-48300","statearr-48301","inst_48284","statearr-48302","inst_48279","inst_48280","statearr-48303","inst_48271","inst_48272","inst_48273","inst_48274","inst_48275","inst_48277","statearr-48304","statearr-48305","statearr-48306","inst_48289","statearr-48307","statearr-48308","inst_48293","inst_48294","cljs.core.async.impl.ioc-helpers/return-chan","statearr-48309","inst_48291","statearr-48310","statearr-48311","state-machine__41378__auto__","ret-value__41379__auto__","result__41380__auto__","cljs.core/keyword-identical?","ex__41381__auto__","e48312","statearr-48313","cljs.core/seq","statearr-48314","cljs.core/first","state__41464__auto__","statearr-48315","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.get","clojure.string/ends-with?","testdouble.cljs.csv/read-csv","clojure.string/replace","js/JSON","dcs.pasi.app.loader/load-data"],"sourcesContent":["(ns dcs.pasi.app.loader\n  (:require [clojure.string :as str]\n            [cljs-http.client :as http]\n            [cljs.core.async :refer [<!]]\n            [testdouble.cljs.csv :as csv]\n            [dcs.pasi.app.state :as state])\n  (:require-macros [cljs.core.async.macros :refer [go]]))\n\n\n(defn fetch\n      [url body-handler]\n      (js/console.log (str \"Fetching \" url))\n      (go (let [response (<! (http/get url {:with-credentials? false}))]\n                 (js/console.log (str \"Response from \" url \": status=\" (:status response) \" success=\" (:success response)))\n                 (let [body (:body response)\n                       clj-body (cond\n                                  (str/ends-with? url \".csv\") (csv/read-csv (str/replace body \"\\r\" \"\")) ;; parse as CSV (and remove \\r chars since they're troublesome with this CSV lib in this context)\n                                  (string? body) (.parse js/JSON body) ;; probably a text/plain response that we'll have to explicitly convert to JSON data\n                                  :else body ;; probably an application/json response causing cljs-http to have auto converted the JSON to Clojure data\n                                  )] \n                      (body-handler clj-body)))))\n\n(defn load-data\n  []\n  (js/console.log \"Loading data files\")\n  \n  #_(fetch \"js/waste-sites.geojson\"\n         (fn [geojson] (->> geojson\n                            (reset! state/geojson-cursor)))))"]}