shadow$provide.module$node_modules$ag_grid_react$lib$reactUi$cellRenderer$detailCellRenderer=function(global,require,module,exports){var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};return __assign.apply(this,arguments)};global=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,
k)&&(result[k]=mod[k]);result["default"]=mod;return result};Object.defineProperty(exports,"__esModule",{value:!0});var react_1=global(require("module$node_modules$react$index")),utils_1=require("module$node_modules$ag_grid_react$lib$reactUi$utils"),beansContext_1=require("module$node_modules$ag_grid_react$lib$reactUi$beansContext"),agGridReactUi_1=require("module$node_modules$ag_grid_react$lib$reactUi$agGridReactUi");exports.default=react_1.forwardRef(function(props,ref){var _a=react_1.useContext(beansContext_1.BeansContext),
ctrlsFactory=_a.ctrlsFactory,context=_a.context,gridOptionsWrapper=_a.gridOptionsWrapper,resizeObserverService=_a.resizeObserverService,clientSideRowModel=_a.clientSideRowModel,serverSideRowModel=_a.serverSideRowModel;_a=react_1.useState(new utils_1.CssClasses);var cssClasses=_a[0],setCssClasses=_a[1];_a=react_1.useState(new utils_1.CssClasses);var gridCssClasses=_a[0],setGridCssClasses=_a[1],_d=react_1.useState();_a=_d[0];var setDetailGridOptions=_d[1],_e=react_1.useState();_d=_e[0];var setDetailRowData=
_e[1],ctrlRef=react_1.useRef(),eGuiRef=react_1.useRef(null);_e=react_1.useMemo(function(){return cssClasses.toString()+" ag-details-row"},[cssClasses]);var gridClassName=react_1.useMemo(function(){return gridCssClasses.toString()+" ag-details-grid"},[gridCssClasses]);ref&&react_1.useImperativeHandle(ref,function(){return{refresh:function(){return ctrlRef.current.refresh()}}});react_1.useEffect(function(){props.template&&console.warn("AG Grid: detailCellRendererParams.template is not supported by React UI - this only works with frameworks that work against String templates. To change the template, please provide your own React Detail Cell Renderer.")},
[]);react_1.useEffect(function(){var ctrl=ctrlsFactory.getInstance("detailCellRenderer");if(ctrl){context.createBean(ctrl);ctrl.init({addOrRemoveCssClass:function(name,on){return setCssClasses(function(prev){return prev.setClass(name,on)})},addOrRemoveDetailGridCssClass:function(name,on){return setGridCssClasses(function(prev){return prev.setClass(name,on)})},setDetailGrid:function(gridOptions){return setDetailGridOptions(gridOptions)},setRowData:function(rowData){return setDetailRowData(rowData)}},
props);ctrlRef.current=ctrl;if(gridOptionsWrapper.isDetailRowAutoHeight()){var checkRowSizeFunc=function(){var clientHeight=eGuiRef.current.clientHeight;null!=clientHeight&&0<clientHeight&&setTimeout(function(){props.node.setRowHeight(clientHeight);if(clientSideRowModel)clientSideRowModel.onRowHeightChanged();else if(serverSideRowModel)serverSideRowModel.onRowHeightChanged()},0)};resizeObserverService.observeResize(eGuiRef.current,checkRowSizeFunc);checkRowSizeFunc()}return function(){context.destroyBean(ctrl)}}},
[]);ref=react_1.useCallback(function(api,columnApi){ctrlRef.current.registerDetailWithMaster(api,columnApi)},[]);return react_1.default.createElement("div",{className:_e,ref:eGuiRef},_a&&react_1.default.createElement(agGridReactUi_1.AgGridReactUi,__assign({className:gridClassName},_a,{rowData:_d,setGridApi:ref})))})}
//# sourceMappingURL=module$node_modules$ag_grid_react$lib$reactUi$cellRenderer$detailCellRenderer.js.map
