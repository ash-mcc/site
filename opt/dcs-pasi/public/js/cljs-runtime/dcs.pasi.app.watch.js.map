{"version":3,"sources":["dcs/pasi/app/watch.cljs"],"mappings":"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","names":["cljs.core/add-watch","dcs.pasi.app.state/x-ds-cursor","_key","_atom","old-state","new-state","vec__60891","cljs.core.nth","only-in-a","only-in-b","_in-both","clojure.data/diff","cljs.core/set","cljs.core/seq","temp__5753__auto__","cljs.core/deref","component","dcs.pasi.app.state/x-grid-api-component-cursor","cljs.core/clj->js","dcs.pasi.app.state/unauthn-wr-ds-cursor","vec__60903","cljs.core/reset!","dcs.pasi.app.state/unauthn-selected-years-cursor","cljs.core.map","p1__60902#","cljs.core.subs","cljs.core/int","dcs.pasi.app.state/unauthn-selected-orgs-cursor","dcs.pasi.app.state/unauthn-selected-streams-cursor","vec__60908","wr-ds","grid-api","dcs.pasi.app.state/unauthn-grid-api-cursor","and__4251__auto__","dcs.pasi.app.view.unauthenticated.tmp/filter-ds","vec__60911","vec__60914"],"sourcesContent":["(ns dcs.pasi.app.watch\n  (:require [clojure.data :as data]\n            [dcs.pasi.app.state :as state]\n            [dcs.pasi.app.view.unauthenticated.tmp :as tmp]))\n\n\n(add-watch state/x-ds-cursor :x-aggrid\n           (fn [_key _atom old-state new-state]\n             (let [[only-in-a only-in-b _in-both] (data/diff (set old-state) \n                                                             (set new-state))]\n               (when (or (seq only-in-a) \n                         (seq only-in-b))\n                 (when-let [component @state/x-grid-api-component-cursor]\n                   ;; neither of the next 2 lines do what we want\n                   ;(.refreshCells component (clj->js {:force? true}))\n                   ;(.redrawRows component)\n                   (.setRowData component (clj->js new-state)))))))\n\n(add-watch state/unauthn-wr-ds-cursor :unauthn-wr-ds\n           (fn [_key _atom old-state new-state]\n             (let [[only-in-a only-in-b _in-both] (data/diff (set old-state) \n                                                             (set new-state))]\n               (when (or (seq only-in-a) \n                         (seq only-in-b))\n                 (reset! state/unauthn-selected-years-cursor (->> new-state\n                                                                  (map :from)\n                                                                  (map #(subs % 0 4))\n                                                                  (map int)\n                                                                  set))\n                 (reset! state/unauthn-selected-orgs-cursor (->> new-state\n                                                                 (map :enabler)\n                                                                 set))\n                 (reset! state/unauthn-selected-streams-cursor (->> new-state\n                                                                    (map :wasteStream)\n                                                                    set))\n                 #_(when-let [component @state/unauthn-grid-api-cursor]\n                   ;; neither of the next 2 lines do what we want\n                   ;(.refreshCells component (clj->js {:force? true}))\n                   ;(.redrawRows component)\n                   (.setRowData component (clj->js new-state)))))))\n\n(add-watch state/unauthn-selected-orgs-cursor :unauthn-selected-orgs\n           (fn [_key _atom old-state new-state]\n             (let [[only-in-a only-in-b _in-both] (data/diff (set old-state) \n                                                             (set new-state))]\n               (when (or (seq only-in-a) \n                         (seq only-in-b))\n                 (let [wr-ds @state/unauthn-wr-ds-cursor\n                       grid-api @state/unauthn-grid-api-cursor]\n                   (when (and (seq wr-ds)\n                              grid-api)\n                     ;; neither of the next 2 lines do what we want\n                     ;(.refreshCells component (clj->js {:force? true}))\n                     ;(.redrawRows component)\n                     (.setRowData grid-api (clj->js (tmp/filter-ds wr-ds @state/unauthn-selected-years-cursor new-state @state/unauthn-selected-streams-cursor)))))))))\n\n(add-watch state/unauthn-selected-years-cursor :unauthn-selected-years\n           (fn [_key _atom old-state new-state]\n             (let [[only-in-a only-in-b _in-both] (data/diff (set old-state) \n                                                             (set new-state))]\n               (when (or (seq only-in-a) \n                         (seq only-in-b))\n                 (let [wr-ds @state/unauthn-wr-ds-cursor\n                       grid-api @state/unauthn-grid-api-cursor]\n                   (when (and (seq wr-ds)\n                              grid-api)\n                     ;; neither of the next 2 lines do what we want\n                     ;(.refreshCells component (clj->js {:force? true}))\n                     ;(.redrawRows component)\n                     (.setRowData grid-api (clj->js (tmp/filter-ds wr-ds new-state @state/unauthn-selected-orgs-cursor @state/unauthn-selected-streams-cursor)))))))))\n\n(add-watch state/unauthn-selected-streams-cursor :unauthn-selected-streams\n           (fn [_key _atom old-state new-state]\n             (let [[only-in-a only-in-b _in-both] (data/diff (set old-state) \n                                                             (set new-state))]\n               (when (or (seq only-in-a) \n                         (seq only-in-b))\n                 (let [wr-ds @state/unauthn-wr-ds-cursor\n                       grid-api @state/unauthn-grid-api-cursor]\n                   (when (and (seq wr-ds)\n                              grid-api)\n                     ;; neither of the next 2 lines do what we want\n                     ;(.refreshCells component (clj->js {:force? true}))\n                     ;(.redrawRows component)\n                     (.setRowData grid-api (clj->js (tmp/filter-ds wr-ds @state/unauthn-selected-years-cursor @state/unauthn-selected-orgs-cursor new-state)))))))))"]}