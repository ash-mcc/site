shadow$provide.module$node_modules$ag_grid_react$lib$reactUi$cellRenderer$groupCellRenderer=function(global,require,module,exports){var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};return __assign.apply(this,arguments)};global=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,
k)&&(result[k]=mod[k]);result["default"]=mod;return result};Object.defineProperty(exports,"__esModule",{value:!0});var ag_grid_community_1=require("module$node_modules$ag_grid_community$dist$ag_grid_community_cjs"),react_1=global(require("module$node_modules$react$index")),beansContext_1=require("module$node_modules$ag_grid_react$lib$reactUi$beansContext"),jsComp_1=require("module$node_modules$ag_grid_react$lib$reactUi$jsComp"),utils_1=require("module$node_modules$ag_grid_react$lib$reactUi$utils"),
GroupCellRenderer=function(props){var context=react_1.useContext(beansContext_1.BeansContext).context,eGui=react_1.useRef(null),eValueRef=react_1.useRef(null),eCheckboxRef=react_1.useRef(null),eExpandedRef=react_1.useRef(null),eContractedRef=react_1.useRef(null),_a=react_1.useState(),innerCompDetails=_a[0],setInnerCompDetails=_a[1],_b=react_1.useState();_a=_b[0];var setChildCount=_b[1],_c=react_1.useState();_b=_c[0];var setValue=_c[1];_c=react_1.useState(new utils_1.CssClasses);var cssClasses=_c[0],
setCssClasses=_c[1];_c=react_1.useState(new utils_1.CssClasses);var expandedCssClasses=_c[0],setExpandedCssClasses=_c[1];_c=react_1.useState(new utils_1.CssClasses);var contractedCssClasses=_c[0],setContractedCssClasses=_c[1];_c=react_1.useState(new utils_1.CssClasses);var checkboxCssClasses=_c[0],setCheckboxCssClasses=_c[1];react_1.useEffect(function(){return jsComp_1.showJsComp(innerCompDetails,context,eValueRef.current)},[innerCompDetails]);react_1.useEffect(function(){var ctrl=context.createBean(new ag_grid_community_1.GroupCellRendererCtrl);
ctrl.init({setInnerRenderer:function(details,valueToDisplay){setInnerCompDetails(details);setValue(valueToDisplay)},setChildCount:function(count){return setChildCount(count)},addOrRemoveCssClass:function(name,on){return setCssClasses(function(prev){return prev.setClass(name,on)})},setContractedDisplayed:function(displayed){return setContractedCssClasses(function(prev){return prev.setClass("ag-hidden",!displayed)})},setExpandedDisplayed:function(displayed){return setExpandedCssClasses(function(prev){return prev.setClass("ag-hidden",
!displayed)})},setCheckboxVisible:function(visible){setCheckboxCssClasses(function(prev){return prev.setClass("ag-invisible",!visible)})}},eGui.current,eCheckboxRef.current,eExpandedRef.current,eContractedRef.current,GroupCellRenderer,props);return function(){context.destroyBean(ctrl)}},[]);_c=react_1.useMemo(function(){return"ag-cell-wrapper "+cssClasses.toString()},[cssClasses]);var expandedClassName=react_1.useMemo(function(){return"ag-group-expanded "+expandedCssClasses.toString()},[expandedCssClasses]),
contractedClassName=react_1.useMemo(function(){return"ag-group-contracted "+contractedCssClasses.toString()},[contractedCssClasses]),checkboxClassName=react_1.useMemo(function(){return"ag-group-checkbox "+checkboxCssClasses.toString()},[checkboxCssClasses]),useFwRenderer=innerCompDetails&&innerCompDetails.componentFromFramework,FwRenderer=useFwRenderer?innerCompDetails.componentClass:void 0,useValue=null==innerCompDetails&&null!=_b;return react_1.default.createElement("span",__assign({className:_c,
ref:eGui},props.colDef?{}:{role:"gridcell"}),react_1.default.createElement("span",{className:expandedClassName,ref:eExpandedRef}),react_1.default.createElement("span",{className:contractedClassName,ref:eContractedRef}),react_1.default.createElement("span",{className:checkboxClassName,ref:eCheckboxRef}),react_1.default.createElement("span",{className:"ag-group-value",ref:eValueRef},useValue&&react_1.default.createElement(react_1.default.Fragment,null,_b),useFwRenderer&&react_1.default.createElement(FwRenderer,
__assign({},innerCompDetails.params))),react_1.default.createElement("span",{className:"ag-group-child-count"},_a))};exports.default=react_1.memo(GroupCellRenderer)}
//# sourceMappingURL=module$node_modules$ag_grid_react$lib$reactUi$cellRenderer$groupCellRenderer.js.map
